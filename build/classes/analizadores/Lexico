package analizadores;
import java_cup.runtime.Symbol; 

%% 
%class Lexico
%public 
%line 
%char 
%cup 
%unicode
%ignorecase

%init{ 
    yyline = 1; 
    yychar = 1; 
%init} 

BLANCOS=[ \r\t]+
CADENACOMILLASDOBLES = [\"]([^\"\n]|(\\\"))*[\"]
D=[0-9]+
DD=[0-9]+("."[|0-9]+)?
ID=[A-Za-z]+["_"0-9A-Za-z]*
%%

{CADENACOMILLASDOBLES} {return new Symbol(sym.CADENA,yyline,yychar, (yytext()).substring(1,yytext().length()-1));} 

"Imp" {return new Symbol(sym.RPRINT,yyline,yychar, yytext());} 
"Declara" {return new Symbol(sym.RDECLARA,yyline,yychar, yytext());} 
"Number" {return new Symbol(sym.RNUMBER,yyline,yychar, yytext());} 
"String" {return new Symbol(sym.RSTRING,yyline,yychar, yytext());}
"Float" {return new Symbol(sym.RFLOAT,yyline,yychar, yytext();)}
"SI" {return new Symbol(sym.RIF,yyline,yychar, yytext());} 
"sino" {return new Symbol(sym.RELSE,yyline,yychar, yytext());} 
"PARA" {return new Symbol(sym.RFOR,yyline,yychar, yytext());} 
"mientras" {return new Symbol(sym.RWHILE,yyline,yychar, yytext());} 
"Funcion" {return new Symbol(sym.RFUNCTION,yyline,yychar, yytext());}
"void" {return new Symbol(sym.RVOID,yyline,yychar, yytext());}
"retornar" {return new Symbol(sym.RRETURN,yyline,yychar, yytext());}
"BREAK" {return new Symbol(sym.RBREAK,yyline,yychar, yytext());}




";" {return new Symbol(sym.PTCOMA,yyline,yychar, yytext());} 
"(" {return new Symbol(sym.PARIZQ,yyline,yychar, yytext());} 
")" {return new Symbol(sym.PARDER,yyline,yychar, yytext());} 
"{" {return new Symbol(sym.LLAVIZQ,yyline,yychar, yytext());} 
"}" {return new Symbol(sym.LLAVDER,yyline,yychar, yytext());} 
"+" {return new Symbol(sym.MAS,yyline,yychar, yytext());} 
"-" {return new Symbol(sym.MENOS,yyline,yychar, yytext());} 
"*" {return new Symbol(sym.POR,yyline,yychar, yytext());} 
"/" {return new Symbol(sym.DIVIDIDO,yyline,yychar, yytext());} 
"!=" {return new Symbol (sym.DIFQUE,yyline,yychar, yytext());}
"==" {return new Symbol(sym.IGUALQUE,yyline,yychar, yytext());} 
"<=" {return new Symbol(sym.MENIGUALQUE,yyline,yychar, yytext());} 
">=" {return new Symbol(sym.MAYIGUALQUE,yyline,yychar, yytext());} 
"<" {return new Symbol(sym.MENQUE,yyline,yychar, yytext());} 
">" {return new Symbol(sym.MAYQUE,yyline,yychar, yytext());} 
"=" {return new Symbol(sym.IGUAL,yyline,yychar, yytext());} 
"," {return new Symbol(sym.COMA,yyline,yychar, yytext());}

\n {yychar=1;}

{BLANCOS} {} 
{ID} {return new Symbol(sym.IDENTIFICADOR,yyline,yychar, yytext());} 
{D} {return new Symbol(sym.ENTERO,yyline,yychar, yytext());} 
{DD} {return new Symbol(sym.DECIMAL,yyline,yychar, yytext());} 

. {
    System.err.println("Este es un error lexico: "+yytext()+", en la linea: "+yyline+", en la columna: "+yychar);
}
